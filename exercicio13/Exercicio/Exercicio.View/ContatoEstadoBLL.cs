using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using Smart.Database;
using Exercicio.Model;
using System.Data.Common;
using Exercicio.DAL;

namespace Exercicio.View
{
    public class ContatoEstadoBLL : Smart.Model.BusinessObject
    {


        #region Automaticaly generated by Smart.AutoModeling 2.0
        public ContatoEstadoBLL() { }

        public ContatoEstadoBLL(DbConn pDbHnd) : base(pDbHnd) { }


        public List<ContatoEstadoView> listaContatoEstado()
        {
            ContatoEstadoDAL dal = new ContatoEstadoDAL(this.DbHnd);
            dal.Filters = this.Filters;
            return dal.listaContatoEstado();
        }
        #endregion

        public int GetTotalRegistros()  
        {

            ContatoEstadoDAL dal = new ContatoEstadoDAL(this.DbHnd);
            dal.Filters = this.Filters;
            return dal.GetTotalRegistros();

        }
        public List<ContatoEstadoView> listaRelatorio()
        {
            ContatoEstadoDAL dal = new ContatoEstadoDAL(this.DbHnd);
            dal.Filters = this.Filters;
            return dal.listaRelatorio();
        }
        

    
        
        public class ContatoEstadoDAL : Smart.Model.DataAccessObject
        {

            

            #region Automaticaly generated by Smart.AutoModeling 2.0
            public ContatoEstadoDAL(DbConn pDbHnd) : base(pDbHnd) { }

            public List<ContatoEstadoView> listaContatoEstado()
            {
                List<ContatoEstadoView> lstReturn = new List<ContatoEstadoView>();
                String sqlSelect = "CONTATO.cd_contato, CONTATO.cd_estado, CONTATO.dt_nasci, CONTATO.ds_cpf, CONTATO.ds_sexo, CONTATO.ds_cidade, CONTATO.ds_endereco, CONTATO.ds_nome, CONTATO.ds_email, ESTADO.uf_estado";
                String sqlFrom = "CONTATO INNER JOIN ESTADO ON CONTATO.cd_estado = ESTADO.cd_estado";
                String sqlWhere = BuildPagedFilters();
                String sqlOrderBy = BuildPagedOrderBy();
                String sql = (new Smart.Database.SQL.Translator(DbHnd.ProviderName).MontarSqlPaginado(sqlSelect , sqlFrom, sqlWhere, sqlOrderBy, this.Filters.PageNumber, this.Filters.EntriesPerPage));
                using (DbDataReader dr = DbHnd.ExecuteReader(sql))
                {
                    while (dr.Read())
                    {
                        ContatoEstadoView view = new ContatoEstadoView();
                        view.Contato.CdContato.Value = Convert.ToInt32(dr["cd_contato"]);
                        view.Contato.CdEstado.Value = Convert.ToInt32(dr["cd_estado"]);
                        view.Contato.DtNasci.Value = (DateTime)dr["dt_nasci"];
                        view.Contato.DsCpf.Value = dr["ds_cpf"].ToString();
                        view.Contato.DsSexo.Value = dr["ds_sexo"].ToString();
                        view.Contato.DsCidade.Value = dr["ds_cidade"].ToString();
                        view.Contato.DsEndereco.Value = dr["ds_endereco"].ToString();
                        view.Contato.DsNome.Value = dr["ds_nome"].ToString();
                        view.Contato.DsEmail.Value = dr["ds_email"].ToString();
                        view.Estado.CdEstado.Value = Convert.ToInt32(dr["cd_estado"]);
                        view.Estado.UfEstado.Value = dr["uf_estado"].ToString();
                        lstReturn.Add(view);
                    
                    }
                }
                return lstReturn;
            }

            #endregion
            public int GetTotalRegistros()
            {

                int qtdRegistros = 0;
                String sqlWhere = BuildFilters();
                object objNomeContato = DbHnd.ExecuteScalar("SELECT COUNT(1) FROM CONTATO "+sqlWhere);
                if (objNomeContato != null)
                {
                    qtdRegistros = Int32.Parse(objNomeContato.ToString());
                }
                return qtdRegistros;
            }
            public List<ContatoEstadoView> listaRelatorio()
            {
                List<ContatoEstadoView> lstReturn = new List<ContatoEstadoView>();
                String sqlSelect = "CONTATO.cd_contato, CONTATO.cd_estado, CONTATO.dt_nasci, CONTATO.ds_cpf, CONTATO.ds_sexo, CONTATO.ds_cidade, CONTATO.ds_endereco, CONTATO.ds_nome, CONTATO.ds_email, ESTADO.uf_estado";
                String sqlFrom = "CONTATO INNER JOIN ESTADO ON CONTATO.cd_estado = ESTADO.cd_estado";
                String sqlWhere = BuildFilters();
                String sqlOrderBy = BuildOrderBy();

                using (DbDataReader dr = DbHnd.ExecuteReader("SELECT " + sqlSelect + " FROM " + sqlFrom + sqlWhere + sqlOrderBy))
                {
                    while (dr.Read())
                    {
                        ContatoEstadoView view = new ContatoEstadoView();
                        view.Contato.CdContato.Value = Convert.ToInt32(dr["cd_contato"]);
                        view.Contato.CdEstado.Value = Convert.ToInt32(dr["cd_estado"]);
                        view.Contato.DtNasci.Value = (DateTime)dr["dt_nasci"];
                        view.Contato.DsCpf.Value = dr["ds_cpf"].ToString();
                        view.Contato.DsSexo.Value = dr["ds_sexo"].ToString();
                        view.Contato.DsCidade.Value = dr["ds_cidade"].ToString();
                        view.Contato.DsEndereco.Value = dr["ds_endereco"].ToString();
                        view.Contato.DsNome.Value = dr["ds_nome"].ToString();
                        view.Contato.DsEmail.Value = dr["ds_email"].ToString();
                        view.Estado.CdEstado.Value = Convert.ToInt32(dr["cd_estado"]);
                        view.Estado.UfEstado.Value = dr["uf_estado"].ToString();
                        lstReturn.Add(view);

                    }
                }
                return lstReturn;
            } 
        }
        public class ContatoEstadoView
        {
            #region Automaticaly generated by Smart.AutoModeling 2.0
            private ContatoInfo _Contato = new ContatoInfo();
            public ContatoInfo Contato
            {
                get { return _Contato; }
                set { _Contato = value; }
            }

            private EstadoInfo _Estado = new EstadoInfo();
            public EstadoInfo Estado
            {
                get { return _Estado; }
                set { _Estado = value; }
            }

            #endregion
        }
    }
}
