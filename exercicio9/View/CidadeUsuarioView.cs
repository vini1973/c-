using System;
using System.Collections.Generic;
using System.Data.Common;
using Smart.Model;
using Smart.Database;
using TGSmartControls.Model;

namespace TGSmartControls.View
{
	public class CidadeUsuarioBLL : Smart.Model.BusinessObject
	{
		public CidadeUsuarioBLL() { }

		public CidadeUsuarioBLL(DbConn pDbHnd) : base(pDbHnd) { }

		public List<CidadeUsuarioView> AutoGeneratedQuery()
		{
			CidadeUsuarioDAL dal = new CidadeUsuarioDAL(this.DbHnd);
			dal.Filters = this.Filters;
			return dal.AutoGeneratedQuery();
		}

		public CidadeUsuarioView Get(Int32 pCodigo)
		{
			CidadeUsuarioDAL dal = new CidadeUsuarioDAL(this.DbHnd);
			dal.Filters = this.Filters;
			return dal.Get(pCodigo);
		}

		public List<CidadeUsuarioView> ListarPaginado()
		{
			CidadeUsuarioDAL dal = new CidadeUsuarioDAL(this.DbHnd);
			dal.Filters = this.Filters;
			return dal.ListarPaginado();
		}

		public Int32 GetTotalRegistros()
		{
			CidadeUsuarioDAL dal = new CidadeUsuarioDAL(this.DbHnd);
			dal.Filters = this.Filters;
			return dal.GetTotalRegistros();
		}
	}
	public class CidadeUsuarioDAL : Smart.Model.DataAccessObject
	{
		public CidadeUsuarioDAL(DbConn pDbHnd) : base(pDbHnd) { }

		public List<CidadeUsuarioView> AutoGeneratedQuery()
		{
			List<CidadeUsuarioView> lstReturn = new List<CidadeUsuarioView>();

			String sqlSelect = "CIDADE.cd_cidade, CIDADE.cd_estado, CIDADE.ds_nome, USUARIO.dt_nasc, USUARIO.st_ativo, USUARIO.cd_cidadenasc, USUARIO.cd_usuario, USUARIO.ds_nome, USUARIO.ds_email";
			String sqlFrom = "CIDADE INNER JOIN USUARIO ON CIDADE.cd_cidade = USUARIO.cd_cidadenasc";
			String sqlWhere = BuildFilters();
			String sqlOrderBy = BuildOrderBy();
			using (DbDataReader dr = DbHnd.ExecuteReader("SELECT " + sqlSelect + " FROM " + sqlFrom + sqlWhere + sqlOrderBy))
			{
				while (dr.Read())
				{
					CidadeUsuarioView view = new CidadeUsuarioView();
					view.Cidade.CdCidade.Value = Convert.ToInt32(dr["cd_cidade"]);
					view.Cidade.CdEstado.Value = Convert.ToInt32(dr["cd_estado"]);
					view.Cidade.DsNome.Value = dr["ds_nome"].ToString();
					view.Usuario.DtNasc.Value = (DateTime)dr["dt_nasc"];
					view.Usuario.StAtivo.Value = Convert.ToByte(dr["st_ativo"]);
					view.Usuario.CdCidadenasc.Value = Convert.ToInt32(dr["cd_cidadenasc"]);
					view.Usuario.CdUsuario.Value = Convert.ToInt32(dr["cd_usuario"]);
					view.Usuario.DsNome.Value = dr["ds_nome"].ToString();
					view.Usuario.DsEmail.Value = dr["ds_email"].ToString();
					lstReturn.Add(view);
				}
			}
			return lstReturn;
		}

		public CidadeUsuarioView Get(Int32 pCodigo)
		{

			DbHnd.Parametros.Add(new System.Data.SqlClient.SqlParameter("@codigo", pCodigo));
			String sqlSelect = "CIDADE.cd_cidade, CIDADE.cd_estado, CIDADE.ds_nome AS nomecidade, USUARIO.dt_nasc, USUARIO.st_ativo, USUARIO.cd_cidadenasc, USUARIO.cd_usuario, USUARIO.ds_nome, USUARIO.ds_email";
			String sqlFrom = "CIDADE INNER JOIN USUARIO ON CIDADE.cd_cidade = USUARIO.cd_cidadenasc";
			String sqlWhere = " USUARIO.cd_usuario = @codigo";
			DbDataReader dr = DbHnd.ExecuteReader("SELECT " + sqlSelect + " FROM " + sqlFrom + " WHERE " + sqlWhere);
			try
			{
				if (dr.Read())
				{
					CidadeUsuarioView view = new CidadeUsuarioView();
					view.Cidade.CdCidade.Value = Convert.ToInt32(dr["cd_cidade"]);
					view.Cidade.CdEstado.Value = Convert.ToInt32(dr["cd_estado"]);
					view.Cidade.DsNome.Value = dr["nomecidade"].ToString();
					view.Usuario.DtNasc.Value = (DateTime)dr["dt_nasc"];
					view.Usuario.StAtivo.Value = Convert.ToByte(dr["st_ativo"]);
					view.Usuario.CdCidadenasc.Value = Convert.ToInt32(dr["cd_cidadenasc"]);
					view.Usuario.CdUsuario.Value = Convert.ToInt32(dr["cd_usuario"]);
					view.Usuario.DsNome.Value = dr["ds_nome"].ToString();
					view.Usuario.DsEmail.Value = dr["ds_email"].ToString();

					return view;
				}
				else
				{
					return null;
				}
			}
			finally
			{
				dr.Dispose();
			}
		}

		public List<CidadeUsuarioView> ListarPaginado()
		{
			List<CidadeUsuarioView> lstReturn = new List<CidadeUsuarioView>();

			String sqlSelect = "CIDADE.cd_cidade, CIDADE.cd_estado, CIDADE.ds_nome AS nomecidade, USUARIO.dt_nasc, USUARIO.st_ativo, USUARIO.cd_cidadenasc, USUARIO.cd_usuario, USUARIO.ds_nome, USUARIO.ds_email";
			String sqlFrom = "CIDADE INNER JOIN USUARIO ON CIDADE.cd_cidade = USUARIO.cd_cidadenasc";
			String sqlWhere = BuildPagedFilters();
			String sqlOrderBy = BuildPagedOrderBy();
			String sql = new Smart.Database.SQL.Translator(DbHnd.ProviderName).MontarSqlPaginado(sqlSelect, sqlFrom, sqlWhere, sqlOrderBy, this.Filters.PageNumber, this.Filters.EntriesPerPage);
			using (DbDataReader dr = DbHnd.ExecuteReader(sql))
			{
				while (dr.Read())
				{
					CidadeUsuarioView view = new CidadeUsuarioView();
					view.Cidade.CdCidade.Value = Convert.ToInt32(dr["cd_cidade"]);
					view.Cidade.CdEstado.Value = Convert.ToInt32(dr["cd_estado"]);
					view.Cidade.DsNome.Value = dr["nomecidade"].ToString();
					view.Usuario.DtNasc.Value = (DateTime)dr["dt_nasc"];
					view.Usuario.StAtivo.Value = Convert.ToByte(dr["st_ativo"]);
					view.Usuario.CdCidadenasc.Value = Convert.ToInt32(dr["cd_cidadenasc"]);
					view.Usuario.CdUsuario.Value = Convert.ToInt32(dr["cd_usuario"]);
					view.Usuario.DsNome.Value = dr["ds_nome"].ToString();
					view.Usuario.DsEmail.Value = dr["ds_email"].ToString();
					lstReturn.Add(view);
				}
			}
			return lstReturn;
		}

		public Int32 GetTotalRegistros()
		{
			String sqlSelect = "COUNT(USUARIO.cd_usuario)";
			String sqlFrom = "CIDADE INNER JOIN USUARIO ON CIDADE.cd_cidade = USUARIO.cd_cidadenasc";
			String sqlWhere = BuildFilters();
			object obj = DbHnd.ExecuteScalar("SELECT " + sqlSelect + " FROM " + sqlFrom + sqlWhere);
			return Convert.ToInt32(obj);
		}
	}
	public class CidadeUsuarioView
	{
		private CidadeInfo _Cidade = new CidadeInfo();
		public CidadeInfo Cidade
		{
			get { return _Cidade; }
			set { _Cidade = value; }
		}

		private UsuarioInfo _Usuario = new UsuarioInfo();
		public UsuarioInfo Usuario
		{
			get { return _Usuario; }
			set { _Usuario = value; }
		}

	}
}
